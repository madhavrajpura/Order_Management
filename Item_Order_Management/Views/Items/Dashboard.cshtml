@{
    ViewData["Title"] = "User Dashboard";
}

<div class="container-fluid p-4 dashboard-color User-dasrboard min-vh-100">
    <div class="row mb-4">
        <div class="col-12 col-md-6">
            <h2 class="custom-text-color fw-bold">Browse Catalog</h2>
        </div>
    </div>

    <div class="" id="items-content">
        <div class="row mb-4">
            <div class="col-12 col-md-6 d-flex align-items-center">
                <input type="text" id="searchInput" class="form-control w-50 h-100"
                    placeholder="Search by Name or Price">
            </div>
            <div class="col-12 col-md-6 d-flex justify-content-end align-items-center gap-3">
                <div class="d-flex align-items-center">
                    <span class="me-2 text-nowrap">Items per page:</span>
                    <select id="itemsPerPage" class="form-select">
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="30">30</option>
                    </select>
                </div>
            </div>
        </div>
        <div id="itemList" class="row g-4"></div>
        <div id="loading" class="text-center mt-4 d-none">
            <div class="spinner-border custom-text-color" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
        <div id="noMoreItems" class="text-center mt-4 d-none">
            <p class="text-muted">No more items to load</p>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        let itemsCurrentPage = 1;
        let itemsPageSize = $("#itemsPerPage").val();
        let itemsSearchText = "";
        let itemsSortColumn = "ID";
        let itemsSortDirection = "asc";
        let itemsIsLoading = false;
        let itemsHasMore = true;

        // Function to load the Items
        function loadItemsForTab(append = true) {

            if (itemsIsLoading || !itemsHasMore) return;
            itemsIsLoading = true;
            $("#loading").removeClass("d-none");

            $.ajax({
                url: "/Items/GetItemList",
                type: "GET",
                data: { pageNumber: itemsCurrentPage, search: itemsSearchText, pageSize: itemsPageSize, sortColumn: itemsSortColumn, sortDirection: itemsSortDirection },
                success: function (data) {

                    if (append) {
                        $("#itemList").append(data);
                    } else {
                        $("#itemList").html(data);
                    }

                    const totalRecords = parseInt($("#totalRecords").val()) || 0;
                    if (itemsCurrentPage * itemsPageSize >= totalRecords) {
                        itemsHasMore = false;
                        $("#noMoreItems").removeClass("d-none");
                    }
                    itemsCurrentPage++;
                    itemsIsLoading = false;
                    $("#loading").addClass("d-none");
                },
                error: function () {
                    itemsIsLoading = false;
                    $("#loading").addClass("d-none");
                    callErrorToaster("Error Loading Data");
                }
            });
        }

        // Function To toggle Wishlist Items
        function toggleWishlist(event, element) {

            event.preventDefault();
            event.stopPropagation();

            const itemId = $(element).data('item-id');
            const isFavourite = $(element).hasClass('fa-solid');
            $.ajax({
                url: '@Url.Action("ToggleWishlistItem", "Items")',
                type: 'POST',
                data: { itemId: itemId },
                success: function (response) {
                    if (response.success) {
                        if (response.isFavourite) {
                            $(element).removeClass('fa-regular').addClass('fa-solid text-danger')
                                .attr('title', 'Remove from wishlist');
                        } else {
                            $(element).removeClass('fa-solid text-danger').addClass('fa-regular')
                                .attr('title', 'Add to wishlist');
                        }
                    }
                },
                error: function () {
                    callErrorToaster("Error Loading Data");
                }
            });
        }

        $(document).ready(function () {

            // Click handler for wishlist items
            $(document).on('click', '.fa-heart', function (e) {
                toggleWishlist(e, this);
            });

            loadItemsForTab(false);

            // Lazy loading on scroll
            $(window).scroll(function () {
                if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100 && $("#items-content").hasClass("show")) {
                    loadItemsForTab();
                }
            });

            // Search
            $("#searchInput").on("keyup", function () {
                itemsSearchText = $(this).val().trim();
                itemsCurrentPage = 1;
                itemsHasMore = true;
                $("#noMoreItems").addClass("d-none");
                loadItemsForTab(false);
            });

            // Items per page
            $("#itemsPerPage").on("change", function () {
                itemsPageSize = $(this).val();
                itemsCurrentPage = 1;
                itemsHasMore = true;
                $("#noMoreItems").addClass("d-none");
                loadItemsForTab(false);
            });

        });
    </script>
}