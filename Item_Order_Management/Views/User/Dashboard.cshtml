@* @{
    ViewData["Title"] = "User Dashboard";
}

<div id="Navbar" class="mb-4"></div>

<div class="container-fluid p-4">
    <div class="row mb-4">
        <div class="col-12 col-md-6">
            <h2 class="text-dark fw-bold">Browse Items</h2>
        </div>
        <div class="col-12 col-md-6 d-flex justify-content-end align-items-center gap-3">
            <input type="text" id="searchInput" class="form-control w-50" placeholder="Search by name or price">
            <div class="d-flex align-items-center">
                <span class="me-2">Items per page:</span>
                <select id="itemsPerPage" class="form-select">
                    <option value="10">10</option>
                    <option value="20">20</option>
                    <option value="30">30</option>
                </select>
            </div>
        </div>
    </div>

    <div id="itemList" class="row g-4"></div>
    <div id="loading" class="text-center mt-4 d-none">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
    <div id="noMoreItems" class="text-center mt-4 d-none">
        <p class="text-muted">No more items to load</p>
    </div>
</div>

@section Scripts {
    <style>
        .item-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .item-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
        }
    </style>
    <script>
        let currentPage = 1;
        let pageSize = $("#itemsPerPage").val();
        let searchText = "";
        let sortColumn = "ID";
        let sortDirection = "asc";
        let isLoading = false;
        let hasMoreItems = true;

        function loadNavbar() {
            $.ajax({
                url: "/User/GetUserNavbarData",
                type: "GET",
                success: function(data) {
                    $("#Navbar").html(data);
                },
                error: function() {
                    console.error("Error loading navbar");
                }
            });
        }

        function loadItems(append = true) {
            if (isLoading || !hasMoreItems) return;
            isLoading = true;
            $("#loading").removeClass("d-none");

            $.ajax({
                url: "/User/GetItemList",
                type: "GET",
                data: { pageNumber: currentPage, search: searchText, pageSize: pageSize, sortColumn: sortColumn, sortDirection: sortDirection },
                success: function(data) {
                    if (append) {
                        $("#itemList").append(data);
                    } else {
                        $("#itemList").html(data);
                    }

                    const totalRecords = parseInt($("#totalRecords").val()) || 0;
                    if (currentPage * pageSize >= totalRecords) {
                        hasMoreItems = false;
                        $("#noMoreItems").removeClass("d-none");
                    }
                    currentPage++;
                    isLoading = false;
                    $("#loading").addClass("d-none");
                },
                error: function() {
                    isLoading = false;
                    $("#loading").addClass("d-none");
                    console.error("Error loading items");
                }
            });
        }

        $(document).ready(function() {
            loadNavbar();
            loadItems(false);

            // Lazy loading on scroll
            $(window).scroll(function() {
                if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100) {
                    loadItems();
                }
            });

            // Search
            $("#searchInput").on("keyup", _.debounce(function() {
                searchText = $(this).val().trim();
                currentPage = 1;
                hasMoreItems = true;
                $("#noMoreItems").addClass("d-none");
                loadItems(false);
            }, 300));

            // Items per page
            $("#itemsPerPage").on("change", function() {
                pageSize = $(this).val();
                currentPage = 1;
                hasMoreItems = true;
                $("#noMoreItems").addClass("d-none");
                loadItems(false);
            });
        });
    </script>
} *@

@{
    ViewData["Title"] = "User Dashboard";
}

<div id="Navbar" class="mb-4"></div>

<div class="container-fluid p-4">
    <div class="row mb-4">
        <div class="col-12 col-md-6">
            <h2 class="text-dark fw-bold">Browse Catalog</h2>
        </div>
        <div class="col-12 col-md-6 d-flex justify-content-end align-items-center gap-3">
            <ul class="nav nav-tabs">
                <li class="nav-item">
                    <a class="nav-link active" id="items-tab" data-bs-toggle="tab" href="#items-content" role="tab">Items</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders-content" role="tab">Orders</a>
                </li>
            </ul>
        </div>
    </div>

    <div class="tab-content">
        <div class="tab-pane fade show active" id="items-content" role="tabpanel">
            <div class="row mb-4">
                <div class="col-12 col-md-6 d-flex align-items-center">
                    <input type="text" id="searchInput" class="form-control w-50" placeholder="Search by name or price">
                </div>
                <div class="col-12 col-md-6 d-flex justify-content-end align-items-center gap-3">
                    <div class="d-flex align-items-center">
                        <span class="me-2">Items per page:</span>
                        <select id="itemsPerPage" class="form-select">
                            <option value="10">10</option>
                            <option value="20">20</option>
                            <option value="30">30</option>
                        </select>
                    </div>
                </div>
            </div>
            <div id="itemList" class="row g-4"></div>
            <div id="loading" class="text-center mt-4 d-none">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <div id="noMoreItems" class="text-center mt-4 d-none">
                <p class="text-muted">No more items to load</p>
            </div>
        </div>
        <div class="tab-pane fade" id="orders-content" role="tabpanel"></div>
    </div>
</div>

<!-- Save Order Modal -->
<div id="SaveOrderModal" class="modal fade" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered" id="SaveOrder-Content"></div>
</div>

<!-- Delete Order Modal -->
<div class="modal fade" id="DeleteOrderModal" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5 fw-bold text-secondary">Delete Order Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-center">
                    <i class="fa-solid fa-triangle-exclamation fa-3x text-warning"></i>
                </div>
                <p class="fw-semibold text-secondary text-center mb-3 pt-2">Are you sure you want to delete this order?</p>
                <form id="DeleteOrderForm">
                    <input type="hidden" id="DeleteOrderId" name="orderId">
                    <div class="modal-footer mt-3 d-flex justify-content-center">
                        <button type="submit" class="btn btn-primary">Yes</button>
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/smoothness/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <style>
        .item-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .item-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
        }
        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto;
            overflow-x: hidden;
            z-index: 1050;
        }
    </style>
    <script>
        let itemsCurrentPage = 1;
        let itemsPageSize = $("#itemsPerPage").val();
        let itemsSearchText = "";
        let itemsSortColumn = "ID";
        let itemsSortDirection = "asc";
        let itemsIsLoading = false;
        let itemsHasMore = true;

        function loadNavbar() {
            $.ajax({
                url: "/User/GetUserNavbarData",
                type: "GET",
                success: function(data) {
                    $("#Navbar").html(data);
                },
                error: function() {
                    console.error("Error loading navbar");
                }
            });
        }

        function loadItemsForTab(append = true) {
            if (itemsIsLoading || !itemsHasMore) return;
            itemsIsLoading = true;
            $("#loading").removeClass("d-none");

            $.ajax({
                url: "/User/GetItemList",
                type: "GET",
                data: { pageNumber: itemsCurrentPage, search: itemsSearchText, pageSize: itemsPageSize, sortColumn: itemsSortColumn, sortDirection: itemsSortDirection },
                success: function(data) {
                    if (append) {
                        $("#itemList").append(data);
                    } else {
                        $("#itemList").html(data);
                    }

                    const totalRecords = parseInt($("#totalRecords").val()) || 0;
                    if (itemsCurrentPage * itemsPageSize >= totalRecords) {
                        itemsHasMore = false;
                        $("#noMoreItems").removeClass("d-none");
                    }
                    itemsCurrentPage++;
                    itemsIsLoading = false;
                    $("#loading").addClass("d-none");
                },
                error: function() {
                    itemsIsLoading = false;
                    $("#loading").addClass("d-none");
                    console.error("Error loading items");
                }
            });
        }

        $(document).ready(function() {
            loadNavbar();
            loadItemsForTab(false);

            // Lazy loading on scroll
            $(window).scroll(function() {
                if ($(window).scrollTop() + $(window).height() >= $(document).height() - 100 && $("#items-content").hasClass("show")) {
                    loadItemsForTab();
                }
            });

            // Search
            $("#searchInput").on("keyup", _.debounce(function() {
                itemsSearchText = $(this).val().trim();
                itemsCurrentPage = 1;
                itemsHasMore = true;
                $("#noMoreItems").addClass("d-none");
                loadItemsForTab(false);
            }, 300));

            // Items per page
            $("#itemsPerPage").on("change", function() {
                itemsPageSize = $(this).val();
                itemsCurrentPage = 1;
                itemsHasMore = true;
                $("#noMoreItems").addClass("d-none");
                loadItemsForTab(false);
            });

            // Place Order button handler
            $(document).on("click", ".placeOrder", function() {
                const itemId = $(this).data("item-id");
                const itemName = $(this).data("item-name");
                const itemPrice = $(this).data("item-price");

                $.ajax({
                    url: "/User/GetOrderById",
                    type: "GET",
                    data: { orderId: 0 },
                    success: function(data) {
                        $("#SaveOrder-Content").html(data);
                        $("#SaveOrderModal").modal("show");
                        $("#itemId").val(itemId);
                        $("#itemName").val(itemName);
                        $("#price").val(itemPrice);
                        $("#itemName").autocomplete({
                            source: "/User/GetItemsForAutocomplete",
                            minLength: 1,
                            select: function(event, ui) {
                                $("#itemId").val(ui.item.id);
                                $("#price").val(ui.item.price);
                                calculateOrderAmount();
                            }
                        });
                        calculateOrderAmount();
                    },
                    error: function() {
                        console.error("Error loading order form");
                    }
                });
            });

            // Load Orders tab content
            $(document).on("click", "#orders-tab", function(e) {
                e.preventDefault();
                if (!$("#orders-content").hasClass("loaded")) {
                    $.ajax({
                        url: "/User/Orders",
                        type: "GET",
                        success: function(data) {
                            $("#orders-content").html(data);
                            $("#orders-content").addClass("loaded");
                            bootstrap.Tab.getOrCreateInstance(document.querySelector("#orders-tab")).show();
                        },
                        error: function() {
                            console.error("Error loading orders");
                        }
                    });
                } else {
                    bootstrap.Tab.getOrCreateInstance(document.querySelector("#orders-tab")).show();
                }
            });

            // Save Order Form submission
            $(document).on("submit", "#SaveOrderForm", function(e) {
                e.preventDefault();
                $.ajax({
                    url: "/User/SaveOrder",
                    type: "POST",
                    data: $(this).serialize(),
                    success: function(data) {
                        if (data.success) {
                            callSuccessToaster(data.text);
                            $("#SaveOrderModal").modal("hide");
                            $("#orders-content").removeClass("loaded");
                            $("#orders-tab").trigger("click");
                        } else {
                            callErrorToaster(data.text);
                        }
                    },
                    error: function() {
                        callErrorToaster("Error saving order");
                    }
                });
            });

            // Delete Order
            $(document).on("click", ".deleteOrder", function() {
                const orderId = $(this).data("id");
                $("#DeleteOrderId").val(orderId);
            });

            $(document).on("submit", "#DeleteOrderForm", function(e) {
                e.preventDefault();
                const orderId = $("#DeleteOrderId").val();
                $.ajax({
                    url: "/User/DeleteOrder",
                    type: "POST",
                    data: { orderId: orderId },
                    success: function(data) {
                        if (data.success) {
                            callSuccessToaster(data.text);
                            $("#DeleteOrderModal").modal("hide");
                            $("#orders-content").removeClass("loaded");
                            $("#orders-tab").trigger("click");
                        } else {
                            callErrorToaster(data.text);
                        }
                    },
                    error: function() {
                        callErrorToaster("Error deleting order");
                    }
                });
            });
        });
    </script>
}