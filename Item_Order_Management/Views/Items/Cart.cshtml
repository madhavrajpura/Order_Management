@using DataAccessLayer.ViewModels
@model List<CartViewModel>

@{
    ViewData["Title"] = "My Cart";
}

<div class="container-fluid p-4 dashboard-color User-dasrboard min-vh-100">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="custom-text-color fw-bold">My Cart</h2>
        </div>
    </div>
    <div id="cart-content">
        <div id="cartItems" class="row g-4"></div>
    </div>
</div>

@section Scripts {
    <script>
        // Function to Load User Navbar.
        function LoadUserNavbar() {
            $.ajax({
                url: "/Items/GetUserNavbarData",
                type: "GET",
                success: function (data) {
                    $("#Navbar").html(data);
                }
            });
        }

        // Function to Update the place order button state
        function updatePlaceOrderButtonState() {
            let hasOutOfStock = false;
            $(".cart-item").each(function () {
                const stock = parseInt($(this).data("stock"));
                const quantity = parseInt($(this).find(".quantity-input").val());
                if (stock === 0 || quantity > stock) {
                    hasOutOfStock = true;
                }
            });
            $("#cartSummary .solid-btn").prop("disabled", hasOutOfStock);
        }

        // Function to load cart items
        function loadCartItems() {
            $.ajax({
                url: "/Items/GetCartItems",
                type: "GET",
                success: function (data) {
                    $("#cartItems").html(data);
                    updateTotalAmount();
                    LoadUserNavbar();
                    updatePlaceOrderButtonState();
                }
            });
        }

        // Function to update the total amount
        function updateTotalAmount() {
            let total = 0;
            $(".cart-item").each(function () {
                const price = parseFloat($(this).data("price"));
                const quantity = parseInt($(this).find(".quantity-input").val());
                total += price * quantity;
            });
            $("#totalAmount").text(`â‚¹ ${total.toFixed(2)}`);
            updatePlaceOrderButtonState();
        }

        // Function to Update the Cart Quantity
        function updateCartQuantity(cartId, quantity) {
            $.ajax({
                url: "/Items/UpdateCartQuantity",
                type: "POST",
                data: { cartId: cartId, quantity: quantity },
                success: function (response) {
                    if (response.success) {
                        updateTotalAmount();
                        loadCartItems();
                    } else {
                        loadCartItems();
                        LoadUserNavbar();
                        callErrorToaster(response.message);
                    }
                }
            });
        }

        // READY
        $(document).ready(function () {
            // Load Cart Items
            loadCartItems();

            // Quantity on Click
            $(document).on("click", ".quantity-btn", function () {
                const inputTag = $(this).siblings(".quantity-input");
                let qty = parseInt(inputTag.val());
                const maxQty = parseInt(inputTag.attr("max"));
                const stock = parseInt($(this).closest(".cart-item").data("stock"));
                if (isNaN(qty)) qty = 1;
                const cardTag = $(this).closest(".cart-item");
                const cartId = cardTag.find(".remove-btn").data("cart-id");

                if ($(this).hasClass("plus")) {
                    if (stock === 0 || qty >= stock) {
                        callErrorToaster(stock === 0 ? "Item is out of stock" : `Only ${stock} units available`);
                        return;
                    }
                    qty = qty < maxQty ? qty + 1 : maxQty;
                } else {
                    qty = qty > 1 ? qty - 1 : 1;
                }

                inputTag.val(qty);
                updateCartQuantity(cartId, qty);
            });

            // Remove button on click
            $(document).on("click", ".remove-btn", function () {
                const cartId = $(this).data("cart-id");
                $.ajax({
                    url: "/Items/RemoveFromCart",
                    type: "POST",
                    data: { cartId: cartId },
                    success: function (data) {
                        $("#cartItems").html(data);
                        updateTotalAmount();
                        LoadUserNavbar();
                    }
                });
            });

            // Function for Notify Me button
            $(document).on("click", ".notify-btn", function () {
                const itemId = $(this).data("item-id");
                const itemName = $(this).data("item-name");
                $.ajax({
                    url: "/Items/RequestStockNotification",
                    type: "POST",
                    data: { itemId: itemId, itemName: itemName },
                    success: function (response) {
                        if (response.success) {
                            $(".notify-btn").attr("disabled", true);
                            callSuccessToaster(response.message);
                        } else {
                            callErrorToaster(response.message);
                        }
                    },
                    error: function () {
                        callErrorToaster("Failed to request notification. Please try again.");
                    }
                });
            });

            // Trigger the Cart Summary
            $("#cartSummary .solid-btn").off('click').on('click', function () {
                showOrderConfirmationModal();
            });
        });
        // END READY
    </script>
}